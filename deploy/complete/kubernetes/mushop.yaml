---
# Source: mushop/charts/carts/templates/oadb-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: carts-oadb-admin
  labels: 
    app.kubernetes.io/name: carts
    helm.sh/chart: carts-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  oadb_admin_pw: ""
---
# Source: mushop/charts/carts/templates/oadb-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: carts-oadb-connection
  labels: 
    app.kubernetes.io/name: carts
    helm.sh/chart: carts-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  oadb_wallet_pw: bW9jaw==
  oadb_service: bW9jaw==
---
# Source: mushop/charts/carts/templates/oadb-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: carts-oadb-credentials
  labels: 
    app.kubernetes.io/name: carts
    helm.sh/chart: carts-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  oadb_user: bW9jaw==
  oadb_pw: bW9jaw==
---
# Source: mushop/charts/carts/templates/oadb-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: carts-oadb-wallet
  labels: 
    app.kubernetes.io/name: carts
    helm.sh/chart: carts-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  {}
---
# Source: mushop/charts/catalogue/templates/oadb-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: catalogue-oadb-admin
  labels: 
    app.kubernetes.io/name: catalogue
    helm.sh/chart: catalogue-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  oadb_admin_pw: ""
---
# Source: mushop/charts/catalogue/templates/oadb-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: catalogue-oadb-connection
  labels: 
    app.kubernetes.io/name: catalogue
    helm.sh/chart: catalogue-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  oadb_service: bW9jaw==
---
# Source: mushop/charts/catalogue/templates/oadb-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: catalogue-oadb-credentials
  labels: 
    app.kubernetes.io/name: catalogue
    helm.sh/chart: catalogue-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  oadb_user: bW9jaw==
  oadb_pw: bW9jaw==
---
# Source: mushop/charts/catalogue/templates/oadb-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: catalogue-oadb-wallet
  labels: 
    app.kubernetes.io/name: catalogue
    helm.sh/chart: catalogue-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  {}
---
# Source: mushop/charts/orders/templates/oadb-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: orders-oadb-admin
  labels: 
    app.kubernetes.io/name: orders
    helm.sh/chart: orders-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  oadb_admin_pw: ""
---
# Source: mushop/charts/orders/templates/oadb-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: orders-oadb-connection
  labels: 
    app.kubernetes.io/name: orders
    helm.sh/chart: orders-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  oadb_wallet_pw: bW9jaw==
  oadb_service: bW9jaw==
---
# Source: mushop/charts/orders/templates/oadb-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: orders-oadb-credentials
  labels: 
    app.kubernetes.io/name: orders
    helm.sh/chart: orders-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  oadb_user: bW9jaw==
  oadb_pw: bW9jaw==
---
# Source: mushop/charts/orders/templates/oadb-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: orders-oadb-wallet
  labels: 
    app.kubernetes.io/name: orders
    helm.sh/chart: orders-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  {}
---
# Source: mushop/charts/user/templates/oadb-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: user-oadb-admin
  labels: 
    app.kubernetes.io/name: user
    helm.sh/chart: user-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  oadb_admin_pw: ""
---
# Source: mushop/charts/user/templates/oadb-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: user-oadb-connection
  labels: 
    app.kubernetes.io/name: user
    helm.sh/chart: user-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  oadb_service: bW9jaw==
---
# Source: mushop/charts/user/templates/oadb-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: user-oadb-credentials
  labels: 
    app.kubernetes.io/name: user
    helm.sh/chart: user-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  oadb_user: bW9jaw==
  oadb_pw: bW9jaw==
---
# Source: mushop/charts/user/templates/oadb-secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  name: user-oadb-wallet
  labels: 
    app.kubernetes.io/name: user
    helm.sh/chart: user-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  {}
---
# Source: mushop/templates/oos-bucket-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mushop-bucket
  labels: 
    app.kubernetes.io/name: mushop
    helm.sh/chart: mushop-0.1.1
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  region: ""
  name: ""
  namespace: ""
  parUrl: ""
---
# Source: mushop/templates/oss-connection-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: mushop-oss-connection
  labels: 
    app.kubernetes.io/name: mushop
    helm.sh/chart: mushop-0.1.1
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  streamId: ""
  messageEndpoint: ""
---
# Source: mushop/charts/carts/templates/oadb-init-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mushop-carts-init
  labels: 
    app.kubernetes.io/name: carts
    helm.sh/chart: carts-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
data:
  atp.init.sql: "-- Copyright (c) 2019, 2021 Oracle and/or its affiliates. All rights reserved.\n-- Licensed under the Universal Permissive License v 1.0 as shown at http://oss.oracle.com/licenses/upl.\n\nSET SERVEROUTPUT ON;\nSET VERIFY OFF;\nBEGIN\n\t-- Profile Creation\n\tDECLARE\n\t\tprofileExists INTEGER;\n\tBEGIN\n\t\tSELECT COUNT(*) \n\t\tINTO profileExists \n\t\tFROM DBA_PROFILES \n\t\tWHERE PROFILE = 'MUSHOP_SERVICES';\n\t\tDBMS_OUTPUT.PUT_LINE ('** Profile creationg steps - &_DATE');\n\t\tIF profileExists = 0 THEN\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Creating Profile = MUSHOP_SERVICES ...');\n\t\t\tEXECUTE IMMEDIATE\n\t\t\t\t'CREATE PROFILE MUSHOP_SERVICES\n\t\t\t\t\tLIMIT\tPASSWORD_LIFE_TIME UNLIMITED\n\t\t\t\t\t\t\tPASSWORD_GRACE_TIME 0\n\t\t\t\t\t\t\tPASSWORD_REUSE_TIME UNLIMITED\n\t\t\t\t\t\t\tPASSWORD_REUSE_MAX UNLIMITED\n\t\t\t\t\t\t\tFAILED_LOGIN_ATTEMPTS UNLIMITED\n\t\t\t\t\t\t\tPASSWORD_LOCK_TIME UNLIMITED\n\t\t\t\t\t\t\tINACTIVE_ACCOUNT_TIME UNLIMITED';\n\t\tELSE\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Profile = MUSHOP_SERVICES exists, steps ignored');\n\t\tEND IF;\n\tEND;\n\n\t-- Schema User Creation\n\tDECLARE\n\t\tschemaUserExists INTEGER;\n\tBEGIN\n\t\tSELECT COUNT(*) \n\t\tINTO schemaUserExists \n\t\tFROM ALL_USERS \n\t\tWHERE username = '&1';\n\t\tDBMS_OUTPUT.PUT_LINE ('** Schema creationg steps - &_DATE');\n\t\tIF schemaUserExists = 0 THEN\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Creating schema = &1 ...');\n\t\t\tEXECUTE IMMEDIATE 'CREATE USER &1 IDENTIFIED BY &2 PROFILE mushop_services';\n\t\t\tEXECUTE IMMEDIATE 'GRANT CREATE SESSION TO &1';\n\t\t\tEXECUTE IMMEDIATE 'GRANT UNLIMITED TABLESPACE TO &1';\n\t\tELSE\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Schema User = &1 exists, steps ignored');\n\t\tEND IF;\n\tEND;\n\n\t-- Role Creation\n\tDECLARE\n\t\troleExists INTEGER;\n\t\troleName VARCHAR2 (100);\n\tBEGIN\n\t\troleName := '&1' || '_ROLE';\n\t\tSELECT COUNT(*) \n\t\tINTO roleExists \n\t\tFROM DBA_ROLES \n\t\tWHERE role = roleName;\n\t\tDBMS_OUTPUT.PUT_LINE ('** Role creationg steps - &_DATE');\n\t\tIF roleExists = 0 THEN\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Creating Role ' || roleName || '...' );\n\t\t\tEXECUTE IMMEDIATE 'CREATE ROLE ' || roleName;\n\t\t\tEXECUTE IMMEDIATE 'GRANT ' || roleName || ' TO &1';\n\t\t\tEXECUTE IMMEDIATE 'GRANT CREATE TABLE, CREATE VIEW, CREATE PROCEDURE, CREATE SEQUENCE, SODA_APP TO ' || roleName;\n\t\tELSE\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Role '|| roleName ||' exists, steps ignored');\n\t\tEND IF;\n\tEND;\nEND;\n/\n\nquit;\n/"
---
# Source: mushop/charts/catalogue/templates/oadb-init-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mushop-catalogue-init
  labels: 
    app.kubernetes.io/name: catalogue
    helm.sh/chart: catalogue-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
data:
  atp.init.sql: "-- Copyright (c) 2019, 2021 Oracle and/or its affiliates. All rights reserved.\n-- Licensed under the Universal Permissive License v 1.0 as shown at http://oss.oracle.com/licenses/upl.\n\nSET SERVEROUTPUT ON;\nSET VERIFY OFF;\nBEGIN\n\t-- Profile Creation\n\tDECLARE\n\t\tprofileExists INTEGER;\n\tBEGIN\n\t\tSELECT COUNT(*) \n\t\tINTO profileExists \n\t\tFROM DBA_PROFILES \n\t\tWHERE PROFILE = 'MUSHOP_SERVICES';\n\t\tDBMS_OUTPUT.PUT_LINE ('** Profile creationg steps - &_DATE');\n\t\tIF profileExists = 0 THEN\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Creating Profile = MUSHOP_SERVICES ...');\n\t\t\tEXECUTE IMMEDIATE\n\t\t\t\t'CREATE PROFILE MUSHOP_SERVICES\n\t\t\t\t\tLIMIT\tPASSWORD_LIFE_TIME UNLIMITED\n\t\t\t\t\t\t\tPASSWORD_GRACE_TIME 0\n\t\t\t\t\t\t\tPASSWORD_REUSE_TIME UNLIMITED\n\t\t\t\t\t\t\tPASSWORD_REUSE_MAX UNLIMITED\n\t\t\t\t\t\t\tFAILED_LOGIN_ATTEMPTS UNLIMITED\n\t\t\t\t\t\t\tPASSWORD_LOCK_TIME UNLIMITED\n\t\t\t\t\t\t\tINACTIVE_ACCOUNT_TIME UNLIMITED';\n\t\tELSE\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Profile = MUSHOP_SERVICES exists, steps ignored');\n\t\tEND IF;\n\tEND;\n\n\t-- Schema User Creation\n\tDECLARE\n\t\tschemaUserExists INTEGER;\n\tBEGIN\n\t\tSELECT COUNT(*) \n\t\tINTO schemaUserExists \n\t\tFROM ALL_USERS \n\t\tWHERE username = '&1';\n\t\tDBMS_OUTPUT.PUT_LINE ('** Schema creationg steps - &_DATE');\n\t\tIF schemaUserExists = 0 THEN\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Creating schema = &1 ...');\n\t\t\tEXECUTE IMMEDIATE 'CREATE USER &1 IDENTIFIED BY &2 PROFILE mushop_services';\n\t\t\tEXECUTE IMMEDIATE 'GRANT CREATE SESSION TO &1';\n\t\t\tEXECUTE IMMEDIATE 'GRANT UNLIMITED TABLESPACE TO &1';\n\t\tELSE\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Schema User = &1 exists, steps ignored');\n\t\tEND IF;\n\tEND;\n\n\t-- products Table Creation\n\tDECLARE\n\t\ttableExists INTEGER;\n\t\ttableName VARCHAR2 (20) := 'PRODUCTS';\n\tBEGIN\n\t\tSELECT COUNT(*) \n\t\tINTO tableExists \n\t\tFROM DBA_TABLES \n\t\tWHERE owner = '&1'\n\t\tAND table_name = tableName;\n\t\tDBMS_OUTPUT.PUT_LINE ('** Table creationg steps - &_DATE');\n\t\tIF tableExists = 0 THEN\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Creating Table ' || tableName || '...' );\n\t\t\tEXECUTE IMMEDIATE 'CREATE TABLE &1..' || tableName || ' (\n\t\t\t\tsku VARCHAR2(20) NOT NULL,\n\t\t\t\tbrand VARCHAR2(20),\n\t\t\t\ttitle VARCHAR2(40),\n\t\t\t\tdescription VARCHAR2(500),\n\t\t\t\tweight VARCHAR2(10),\n\t\t\t\tproduct_size VARCHAR2(25),\n\t\t\t\tcolors VARCHAR2(20),\n\t\t\t\tqty NUMBER(10, 0),\n\t\t\t\tprice FLOAT, \n\t\t\t\timage_url_1 VARCHAR2(50),\n\t\t\t\timage_url_2 VARCHAR2(50),\n\t\t\t\tPRIMARY KEY(sku)\n\t\t\t)';\n\t\tELSE\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Table '|| tableName ||' exists, steps ignored');\n\t\tEND IF;\n\tEND;\n\n\t-- categories Table Creation\n\tDECLARE\n\t\ttableExists INTEGER;\n\t\ttableName VARCHAR2 (20) := 'CATEGORIES';\n\tBEGIN\n\t\tSELECT COUNT(*) \n\t\tINTO tableExists \n\t\tFROM DBA_TABLES \n\t\tWHERE owner = '&1'\n\t\tAND table_name = tableName;\n\t\tDBMS_OUTPUT.PUT_LINE ('** Table creationg steps - &_DATE');\n\t\tIF tableExists = 0 THEN\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Creating Table ' || tableName || '...' );\n\t\t\tEXECUTE IMMEDIATE 'CREATE TABLE &1..' || tableName || ' (\n\t\t\t\tcategory_id NUMBER(7,0) GENERATED BY DEFAULT ON NULL AS IDENTITY, \n\t\t\t\tname VARCHAR2(30), \n\t\t\t\tPRIMARY KEY(category_id)\n\t\t\t)';\n\t\tELSE\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Table '|| tableName ||' exists, steps ignored');\n\t\tEND IF;\n\tEND;\n\n\t-- product_category Table Creation\n\tDECLARE\n\t\ttableExists INTEGER;\n\t\ttableName VARCHAR2 (20) := 'PRODUCT_CATEGORY';\n\tBEGIN\n\t\tSELECT COUNT(*) \n\t\tINTO tableExists \n\t\tFROM DBA_TABLES \n\t\tWHERE owner = '&1'\n\t\tAND table_name = tableName;\n\t\tDBMS_OUTPUT.PUT_LINE ('** Table creationg steps - &_DATE');\n\t\tIF tableExists = 0 THEN\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Creating Table ' || tableName || '...' );\n\t\t\tEXECUTE IMMEDIATE 'CREATE TABLE &1..' || tableName || ' (\n\t\t\t\tproduct_category_id NUMBER(7,0) GENERATED BY DEFAULT ON NULL AS IDENTITY,\n\t\t\t\tsku VARCHAR2(40), \n\t\t\t\tcategory_id NUMBER(7,0) NOT NULL, \n\t\t\t\tFOREIGN KEY (sku) \n\t\t\t\t\tREFERENCES &1..PRODUCTS(sku), \n\t\t\t\tFOREIGN KEY(category_id)\n\t\t\t\t\tREFERENCES &1..CATEGORIES(category_id),\n\t\t\t\tPRIMARY KEY(product_category_id)\n\t\t\t)';\n\t\tELSE\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Table '|| tableName ||' exists, steps ignored');\n\t\tEND IF;\n\tEND;\n\n\t-- Role Creation\n\tDECLARE\n\t\troleExists INTEGER;\n\t\troleName VARCHAR2 (100);\n\tBEGIN\n\t\troleName := '&1' || '_ROLE';\n\t\tSELECT COUNT(*) \n\t\tINTO roleExists \n\t\tFROM DBA_ROLES \n\t\tWHERE role = roleName;\n\t\tDBMS_OUTPUT.PUT_LINE ('** Role creationg steps - &_DATE');\n\t\tIF roleExists = 0 THEN\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Creating Role ' || roleName || '...' );\n\t\t\tEXECUTE IMMEDIATE 'CREATE ROLE ' || roleName;\n\t\t\tEXECUTE IMMEDIATE 'GRANT ' || roleName || ' TO &1';\n\t\t\tEXECUTE IMMEDIATE 'GRANT SELECT ON &1..PRODUCTS TO ' || roleName;\n\t\t\tEXECUTE IMMEDIATE 'GRANT SELECT ON &1..CATEGORIES TO ' || roleName;\n\t\t\tEXECUTE IMMEDIATE 'GRANT SELECT ON &1..PRODUCT_CATEGORY TO ' || roleName;\n\t\tELSE\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Role '|| roleName ||' exists, steps ignored');\n\t\tEND IF;\n\tEND;\nEND;\n/\n\n-- Populate Data\nBEGIN\n\tDBMS_OUTPUT.PUT_LINE ('** Populating Data... - &_DATE');\n\tBEGIN\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCTS(SKU)) */ INTO &1..PRODUCTS VALUES ('MU-US-001', 'Original', 'Original Unscented Litter Trapper', 'Provide effective cat litter odor control in your cat''s litter box area with Original Texture cat litter. This formula absorbs three times the moisture by volume when compared to clay-based litter, keeping her litter box fresh and welcoming.','151lbs','0','0', 99, 18.50, 'MU-US-001.png', 'MU-US-001_1.png');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCTS(SKU)) */ INTO &1..PRODUCTS VALUES ('MU-US-002', 'Tidy Cats', 'Instant Action Mu BroomKit', 'Put an end to overpowering odors in your home with Purina Tidy Cats Instant Action clumping litter for multiple cats. We know you have no time to waste, and that is no problem with this unique formula. This clumping cat litter is designed to trap odors from the start.','20lbs','0','0', 99, 28.99 , 'MU-US-002.png', 'MU-US-002_1.png');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCTS(SKU)) */ INTO &1..PRODUCTS VALUES ('MU-US-003', 'Choco Spring', 'Mu DeoSpray Deodorizer', 'With Choco Spring scents lingering in the air, your cat''s time in the bathroom doesn''t have to be so smelly anymore! This deodorizer perfumes the air and helps make the litter last longer so you and your cat can enjoy a breath of sweetly-scented air.','26Oz','0','0', 99, 7.99, 'MU-US-003.png', 'MU-US-003_1.png');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCTS(SKU)) */ INTO &1..PRODUCTS VALUES ('MU-US-004', 'Arm ' || chr(38) || ' Hammer', 'Mu O-DeoSpray Deodorizer', 'Add an extra boost of freshness to your litter box. ARM ' || chr(38) || ' HAMMER' || chr(153) ||' baking soda destroys odors instantly in all types of litter - so your box stays first-day fresh longer. ','20Oz','0','0', 99, 4.99, 'MU-US-004.png', 'MU-US-004_1.png');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCTS(SKU)) */ INTO &1..PRODUCTS VALUES ('MU-US-005', 'Petmate', 'Cat Litter Mu LitterBox', 'Stay Fresh litter pans are created with Microban antimicrobial product, which inhibits the growth of stain- and odor-causing bacteria. Made in the USA.','0','18.7\" x 15.5\" x 10.6\"','0', 99, 9.50, 'MU-US-005.png', 'MU-US-005_1.png');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCTS(SKU)) */ INTO &1..PRODUCTS VALUES ('MU-US-006', 'Tidy Cats', 'Mu X-DeoSpray Deodorizer', 'Change the way you think about cleaning your cat''s litter box with the Purina Tidy Cats BREEZE With Ammonia Blocker Litter System starter kit. This system features powerful odor control to keep your house smelling fresh and clean, and the specially designed, cat-friendly litter pellets minimize your pets from tracking litter throughout your home.','0','18.7\" x 15.5\" x 10.6\"','0', 99, 39.25, 'MU-US-006.png', 'MU-US-006_1.png');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCTS(SKU)) */ INTO &1..PRODUCTS VALUES ('MU-US-007', 'Petsafe', 'Original MuMate Bowl', 'Original Pet Fountain with Bonus Reservoir provides 50 oz of fresh, filtered water to your pet, with an additional Bonus 50 Ounce Reservoir. A patented free-falling stream of water entices your pet to drink more and continually aerates the water with healthful oxygen.','0','0','0', 99, 43.95, 'MU-US-007.png', 'MU-US-007_1.png');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCTS(SKU)) */ INTO &1..PRODUCTS VALUES ('MU-US-008', 'Petsafe', 'Drinkwell BrandX Feeder', 'The Pagoda fountain continuously recirculates 70 ounces of fresh, filtered water. Best of all, the stylish ceramic design is easy to clean and looks great in your home. The upper and lower dishes provide two drinking areas for pets, and the patented dual free-falling streams aerate the water for freshness, which encourages your pet to drink more.','0','0','red, white', 99, 79.95, 'MU-US-008.png', 'MU-US-008_1.png');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCTS(SKU)) */ INTO &1..PRODUCTS VALUES ('MU-US-009', 'Petmate', 'Crock Small Coastal FishBowl', 'Standard crock small animal dish is uses a heavy weight design that eliminates movement and spillage.','0','3\"','0', 99, 4.75, 'MU-US-009.png', 'MU-US-009_1.png');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCTS(SKU)) */ INTO &1..PRODUCTS VALUES ('MU-US-010', 'Loving Pet', 'Mu Fusion Bowl', 'Functional and beautiful, Bella Bowls are truly the perfect pet dish. Loving Pets brings new life to veterinarian-recommended stainless steel dog bowls and pet feeding dishes by combining a stainless interior with an attractive poly-resin exterior. A removable rubber base prevents spills, eliminates noise, and makes Bella Bowls fully dishwasher safe.','0','S,M,L,XL','0', 99, 5.99, 'MU-US-010.png', 'MU-US-010_1.png');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCTS(SKU)) */ INTO &1..PRODUCTS VALUES ('MU-US-011', 'Petsafe', 'Mu Mat Green Placemat', 'Petrageous Designs pet placemats are the perfect way to keep your pets'' feeding area clean and classy! This ultra-durable Food/Water Placemat keeps nasty spills and stray kibble off your clean floors, while adding playful character to your home''s decor. Easy to clean.','0','0','0', 99, 4.99, 'MU-US-011.png', 'MU-US-011_1.png');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCTS(SKU)) */ INTO &1..PRODUCTS VALUES ('MU-US-012', 'Loving Pet', 'Mu Mat Blue Placemat', 'Clean, clean, clean! Your little feline can be a messy eater too, and when they''re done you have to clean their dining area. Keep the feeding area around your pet mess free with the Meow Meow Bowl Mat. This fun mat with fish bones and cat sayings is a design you and your pet are sure to love.','0','0','0', 99, 11.95, 'MU-US-012.png', 'MU-US-012_1.png');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCTS(SKU)) */ INTO &1..PRODUCTS VALUES ('MU-US-013', 'Petsafe', 'Mu Storage Container', 'Pet Food Storage Container features a tight seal to ensure your pet''s food will stay fresh longer, reducing spoilage due to pests and moisture. Made from FDS food contact approved plastic.','15lbs','0','0', 99, 9.99, 'MU-US-013.png', 'MU-US-013_1.png');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCTS(SKU)) */ INTO &1..PRODUCTS VALUES ('MU-US-014', 'Pet Food', 'Chicken ' || chr(38) || ' Pomegranate Mu Cat Food', 'Your cats deserve the best scientifically proven food to maintain a healthy weight. Natural and Delicious Grain Free Chicken ' || chr(38) || ' Pomegranate Recipe Dry Cat Food does not contain any cereal or grains of any kind and is completely replaced with the highest quality protein. ','10lbs','0','0', 99, 38.95, 'MU-US-014.png', 'MU-US-014_1.png');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCTS(SKU)) */ INTO &1..PRODUCTS VALUES ('MU-US-015', 'Pet Food', 'Cat and Kitten BlueHill MagiK', 'Cat and Kitten recipe is a grain-free, region-inspired formula that your cat will thrive on. An excellent choice for cats of all breed and ages, this biologically appropriate recipe contains an unmatched variety of fresh regional ingredients delivered daily from local Kentucky farms. Packed with over 75% meat, the recipe features free-fun Cobb chicken, nest-laid eggs, Tom turkey, Blue catfish and Rainbow trout in wholeprey ratios in order to mimic the diet mother nature intended.','12lbs','0','0', 99, 49.95, 'MU-US-015.png', 'MU-US-015_1.png');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCTS(SKU)) */ INTO &1..PRODUCTS VALUES ('MU-US-016', 'Weruva', 'Go Cat Variety Pouches Pack', 'Let''s show our cats that they are truly our best friends, with the new Weruva Grain-Free BFF OMG Pouches Variety Pack. Made with white breast chicken, real, sustainably caught tuna, fresh wild caught salmon, and other real, deboned meats, Weruva has created the perfect meal for our furry, purring best friends. ','3Oz','0','0', 99, 12.99, 'MU-US-016.png', 'MU-US-016_1.png');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCTS(SKU)) */ INTO &1..PRODUCTS VALUES ('MU-US-017', 'Weruva', 'Love Me Variety Pack Green', 'Full of duck, tuna, and white breast, skinless, and boneless chicken, this wholesome food is full of protein and free of any grains, GMOs, MSG, and carrageenan for a balanced meal in each can. Weruva Cats In the Kitchen Love Me Tender Pouches Wet Cat Food will fill your cat with love, tenderly with every meal.','3Oz','0','0', 99, 15.99, 'MU-US-017.png', 'MU-US-017_1.png');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCTS(SKU)) */ INTO &1..PRODUCTS VALUES ('MU-US-018', 'Royal Canin', 'SO Dry Cat Food', 'Whether this is your cat’s first urinary issue or they need ongoing urinary care, your vet recommended Royal Canin Urinary SO for a reason. This veterinary-exclusive dry cat food was developed to nutritionally support your adult cat’s urinary tract and bladder health. It increases the amount of urine your cat produces to help dilute excess minerals that can cause crystals and stones.','15lbs','0','0', 99, 68.74, 'MU-US-018.png', 'MU-US-018_1.png');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCTS(SKU)) */ INTO &1..PRODUCTS VALUES ('MU-US-019', 'Royal Canin', 'Care with Chicken BlueHill MagiK', 'A healthy bladder starts with the right balance of vital nutrients. Excess minerals can encourage the formation of crystals in the urine, which may lead to the creation of bladder stones. They can cause discomfort and lead to more serious problems that require the care of a veterinarian. ','15lbs','0','0', 99, 72.75, 'MU-US-019.png', 'MU-US-019_1.png');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCTS(SKU)) */ INTO &1..PRODUCTS VALUES ('MU-US-020', 'Wellness', 'Wet Canned Mu Dry Food', 'Wellness Complete Health Natural Grain Free Chicken Recipe Canned Cat Food is made with 100% Human Grade Ingredients and uses delicious fruits and vegetables which contain vitamins and antioxidants to help maintain your cats healthy immune system. ','12Oz','0','0', 99, 49.75, 'MU-US-020.png', 'MU-US-020_1.png');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCTS(SKU)) */ INTO &1..PRODUCTS VALUES ('MU-US-021', 'Wellness', 'Green Pea Formula Mu Cat Food', 'Designed with a limited number of premium protein and carbohydrate sources, this Grain-free cat food is an excellent choice when seeking alternative ingredients for your cat. Natural Balance L.I.D. Limited Ingredient Diets Duck and Green Pea Formula Canned Cat Food is designed to support healthy digestion and to maintain skin and coat health—all while providing complete, balanced nutrition for all life stages!','12Oz','0','0', 99, 39.99, 'MU-US-021.png', 'MU-US-021_1.png');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCTS(SKU)) */ INTO &1..PRODUCTS VALUES ('MU-US-022', 'Amazing Paw', 'Wire Cat KittyBrush', 'For a well groomed appearance, cats and kittens need to be brushed regularly. The Magic Coat® Slicker Wire Brushes are designed to easily remove mats while pulling out dead hair. Brushing helps stimulate the skin to promote healthy circulation and increase shine.','0','0','0', 99, 6.99, 'MU-US-022.png', 'MU-US-022_1.png');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCTS(SKU)) */ INTO &1..PRODUCTS VALUES ('MU-US-023', 'Amazing Paw', 'Groom Genie KittyBrush', 'The Groom Genie evolved from a brush designed for humans - the Knot Genie. Rikki Mor, a mom of three, was frustrated with the huge cost and lack of effectiveness of other detangling brushes on the market. So she took matters into her own hands and invented what is now known as The World''s Best Detangling Brush.','0','0','0', 99, 4.75, 'MU-US-023.png', 'MU-US-023_1.png');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCTS(SKU)) */ INTO &1..PRODUCTS VALUES ('MU-US-024', 'Amazing Paw', 'Oatmeal and Aloe 2-in-1 Shampoo', 'Earthbath specially formulated this Oatmeal ' || chr(38) || ' Aloe itch relief shampoo to address the needs of beloved pets with dry, itchy skin. Oatmeal and aloe vera are recommended by veterinarians to effectively combat skin irritation, promote healing, and re-moisturize sensitive, dry skin.','15Oz','0','0', 99, 12.49, 'MU-US-024.png', 'MU-US-024_1.png');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCTS(SKU)) */ INTO &1..PRODUCTS VALUES ('MU-US-025', 'Amazing Paw', 'Oatmeal and Aloe Protein Shampoo', 'The addition of 3% colloidal oatmeal and aloe vera helps re-moisturize and soothe skin, too. Our sumptuous Shampoo will leave your best friend’s coat soft and plush while bringing out its natural luster and brilliance.','15Oz','0','0', 99, 13.49, 'MU-US-025.png', 'MU-US-025_1.png');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCTS(SKU)) */ INTO &1..PRODUCTS VALUES ('MU-US-026', 'Amazing Paw', 'Grooming Mitt for Cats', 'Cleans and softens cat’s coat, removes loose hair and gently massages. Made with lightweight neoprene material with adjustable closer and soft rubber nubs, the Love Glove® mitt is also great for removing loose cat hair from furniture and clothing.','0','0','0', 99, 6.99, 'MU-US-026.png', 'MU-US-026_1.png');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCTS(SKU)) */ INTO &1..PRODUCTS VALUES ('MU-US-027', 'Amazing Paw', 'Motion Lithium Ion Clipper', 'Powerful motor up to 5,500 SPM''s with integrated rapid power. The ''5 in 1'' Pro Blade for less breakage and optimal usage. Blade and clipper are ALWAYS cool running. Lithium Ion battery technology gives optimal performance. 90 minutes of cordless runtime with 45 minute quick full charge. Higher performance, longer usage times and consistent reliability. ','0','0','0', 99, 199.99, 'MU-US-027.png', 'MU-US-027_1.png');\n\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(CATEGORIES(CATEGORY_ID)) */ INTO &1..CATEGORIES VALUES ('1','Cleaning Supplies');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(CATEGORIES(CATEGORY_ID)) */ INTO &1..CATEGORIES VALUES ('2','Deodorizers');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(CATEGORIES(CATEGORY_ID)) */ INTO &1..CATEGORIES VALUES ('3','Litter Accessories');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(CATEGORIES(CATEGORY_ID)) */ INTO &1..CATEGORIES VALUES ('4','Litter Boxes');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(CATEGORIES(CATEGORY_ID)) */ INTO &1..CATEGORIES VALUES ('5','Auto Feeders');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(CATEGORIES(CATEGORY_ID)) */ INTO &1..CATEGORIES VALUES ('6','Bowls');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(CATEGORIES(CATEGORY_ID)) */ INTO &1..CATEGORIES VALUES ('7','Placemats');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(CATEGORIES(CATEGORY_ID)) */ INTO &1..CATEGORIES VALUES ('8','Storage');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(CATEGORIES(CATEGORY_ID)) */ INTO &1..CATEGORIES VALUES ('9','Dry Food');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(CATEGORIES(CATEGORY_ID)) */ INTO &1..CATEGORIES VALUES ('10','Food Pouches');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(CATEGORIES(CATEGORY_ID)) */ INTO &1..CATEGORIES VALUES ('11','Limited Diet');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(CATEGORIES(CATEGORY_ID)) */ INTO &1..CATEGORIES VALUES ('12','Wet Food');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(CATEGORIES(CATEGORY_ID)) */ INTO &1..CATEGORIES VALUES ('13','Brushes');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(CATEGORIES(CATEGORY_ID)) */ INTO &1..CATEGORIES VALUES ('14','Grooming Tools');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(CATEGORIES(CATEGORY_ID)) */ INTO &1..CATEGORIES VALUES ('15','Shampoos and Conditioners');\n\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCT_CATEGORY(PRODUCT_CATEGORY_ID)) */ INTO &1..PRODUCT_CATEGORY VALUES ('1','MU-US-001', '3');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCT_CATEGORY(PRODUCT_CATEGORY_ID)) */ INTO &1..PRODUCT_CATEGORY VALUES ('2','MU-US-002', '3');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCT_CATEGORY(PRODUCT_CATEGORY_ID)) */ INTO &1..PRODUCT_CATEGORY VALUES ('3','MU-US-003', '2');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCT_CATEGORY(PRODUCT_CATEGORY_ID)) */ INTO &1..PRODUCT_CATEGORY VALUES ('4','MU-US-004', '2');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCT_CATEGORY(PRODUCT_CATEGORY_ID)) */ INTO &1..PRODUCT_CATEGORY VALUES ('5','MU-US-005', '4');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCT_CATEGORY(PRODUCT_CATEGORY_ID)) */ INTO &1..PRODUCT_CATEGORY VALUES ('6','MU-US-006', '4');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCT_CATEGORY(PRODUCT_CATEGORY_ID)) */ INTO &1..PRODUCT_CATEGORY VALUES ('7','MU-US-007', '5');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCT_CATEGORY(PRODUCT_CATEGORY_ID)) */ INTO &1..PRODUCT_CATEGORY VALUES ('8','MU-US-008', '5');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCT_CATEGORY(PRODUCT_CATEGORY_ID)) */ INTO &1..PRODUCT_CATEGORY VALUES ('9','MU-US-009', '6');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCT_CATEGORY(PRODUCT_CATEGORY_ID)) */ INTO &1..PRODUCT_CATEGORY VALUES ('10','MU-US-010', '6');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCT_CATEGORY(PRODUCT_CATEGORY_ID)) */ INTO &1..PRODUCT_CATEGORY VALUES ('11','MU-US-011', '7');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCT_CATEGORY(PRODUCT_CATEGORY_ID)) */ INTO &1..PRODUCT_CATEGORY VALUES ('12','MU-US-012', '7');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCT_CATEGORY(PRODUCT_CATEGORY_ID)) */ INTO &1..PRODUCT_CATEGORY VALUES ('13','MU-US-013', '8');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCT_CATEGORY(PRODUCT_CATEGORY_ID)) */ INTO &1..PRODUCT_CATEGORY VALUES ('14','MU-US-014', '9');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCT_CATEGORY(PRODUCT_CATEGORY_ID)) */ INTO &1..PRODUCT_CATEGORY VALUES ('15','MU-US-015', '9');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCT_CATEGORY(PRODUCT_CATEGORY_ID)) */ INTO &1..PRODUCT_CATEGORY VALUES ('16','MU-US-016', '10');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCT_CATEGORY(PRODUCT_CATEGORY_ID)) */ INTO &1..PRODUCT_CATEGORY VALUES ('17','MU-US-017', '10');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCT_CATEGORY(PRODUCT_CATEGORY_ID)) */ INTO &1..PRODUCT_CATEGORY VALUES ('18','MU-US-018', '11');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCT_CATEGORY(PRODUCT_CATEGORY_ID)) */ INTO &1..PRODUCT_CATEGORY VALUES ('19','MU-US-019', '11');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCT_CATEGORY(PRODUCT_CATEGORY_ID)) */ INTO &1..PRODUCT_CATEGORY VALUES ('20','MU-US-020', '12');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCT_CATEGORY(PRODUCT_CATEGORY_ID)) */ INTO &1..PRODUCT_CATEGORY VALUES ('21','MU-US-021', '12');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCT_CATEGORY(PRODUCT_CATEGORY_ID)) */ INTO &1..PRODUCT_CATEGORY VALUES ('22','MU-US-022', '13');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCT_CATEGORY(PRODUCT_CATEGORY_ID)) */ INTO &1..PRODUCT_CATEGORY VALUES ('23','MU-US-023', '13');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCT_CATEGORY(PRODUCT_CATEGORY_ID)) */ INTO &1..PRODUCT_CATEGORY VALUES ('24','MU-US-024', '15');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCT_CATEGORY(PRODUCT_CATEGORY_ID)) */ INTO &1..PRODUCT_CATEGORY VALUES ('25','MU-US-025', '15');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCT_CATEGORY(PRODUCT_CATEGORY_ID)) */ INTO &1..PRODUCT_CATEGORY VALUES ('26','MU-US-026', '14');\n\t\tINSERT /*+ IGNORE_ROW_ON_DUPKEY_INDEX(PRODUCT_CATEGORY(PRODUCT_CATEGORY_ID)) */ INTO &1..PRODUCT_CATEGORY VALUES ('27','MU-US-027', '14');\n\n\t\tCOMMIT;\n\tEND;\nEND;\n/\n\nquit;\n/\n\n"
---
# Source: mushop/charts/edge/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mushop-edge
  labels:
    app.kubernetes.io/name: edge
    helm.sh/chart: edge-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
data:
  traefik.toml: |+
    logLevel = "INFO"
  
    [web]
    address = ":8888"
  
    [entryPoints]
      [entryPoints.http]
        address = ":8080"
  
    [ping]
    entryPoint = "http"
  
    [file]
      [backends]
        # api
        [backends.api]
          [backends.api.loadbalancer]
            method = "wrr"
          [backends.api.servers.server1]
            url = "http://mushop-api"
        # web
        [backends.web1]
          [backends.web1.loadbalancer]
            method = "wrr"
          [backends.web1.servers.server1]
            url = "http://mushop-storefront"
        # media
        [backends.assets1]
          [backends.assets1.loadbalancer]
            method = "wrr"
          [backends.assets1.servers.server1]
            url = "http://mushop-assets"
  
      [frontends]
        [frontends.api]
          backend = "api"
          entrypoints = ["http"]
          [frontends.api.routes.test1]
            rule = "PathPrefix:/api/"
        [frontends.assets1]
          backend = "assets1"
          entrypoints = ["http"]
          [frontends.assets1.routes.test1]
            rule = "PathPrefixStrip:/assets/"
        [frontends.web1]
          backend = "web1"
          entrypoints = ["http"]
---
# Source: mushop/charts/orders/templates/oadb-init-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mushop-orders-init
  labels: 
    app.kubernetes.io/name: orders
    helm.sh/chart: orders-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
data:
  atp.init.sql: "-- Copyright (c) 2019, 2021 Oracle and/or its affiliates. All rights reserved.\n-- Licensed under the Universal Permissive License v 1.0 as shown at http://oss.oracle.com/licenses/upl.\n\nSET SERVEROUTPUT ON;\nSET VERIFY OFF;\nBEGIN\n\t-- Profile Creation\n\tDECLARE\n\t\tprofileExists INTEGER;\n\tBEGIN\n\t\tSELECT COUNT(*) \n\t\tINTO profileExists \n\t\tFROM DBA_PROFILES \n\t\tWHERE PROFILE = 'MUSHOP_SERVICES';\n\t\tDBMS_OUTPUT.PUT_LINE ('** Profile creationg steps - &_DATE');\n\t\tIF profileExists = 0 THEN\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Creating Profile = MUSHOP_SERVICES ...');\n\t\t\tEXECUTE IMMEDIATE\n\t\t\t\t'CREATE PROFILE MUSHOP_SERVICES\n\t\t\t\t\tLIMIT\tPASSWORD_LIFE_TIME UNLIMITED\n\t\t\t\t\t\t\tPASSWORD_GRACE_TIME 0\n\t\t\t\t\t\t\tPASSWORD_REUSE_TIME UNLIMITED\n\t\t\t\t\t\t\tPASSWORD_REUSE_MAX UNLIMITED\n\t\t\t\t\t\t\tFAILED_LOGIN_ATTEMPTS UNLIMITED\n\t\t\t\t\t\t\tPASSWORD_LOCK_TIME UNLIMITED\n\t\t\t\t\t\t\tINACTIVE_ACCOUNT_TIME UNLIMITED';\n\t\tELSE\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Profile = MUSHOP_SERVICES exists, steps ignored');\n\t\tEND IF;\n\tEND;\n\n\t-- Schema User Creation\n\tDECLARE\n\t\tschemaUserExists INTEGER;\n\tBEGIN\n\t\tSELECT COUNT(*) \n\t\tINTO schemaUserExists \n\t\tFROM ALL_USERS \n\t\tWHERE username = '&1';\n\t\tDBMS_OUTPUT.PUT_LINE ('** Schema creationg steps - &_DATE');\n\t\tIF schemaUserExists = 0 THEN\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Creating schema = &1 ...');\n\t\t\tEXECUTE IMMEDIATE 'CREATE USER &1 IDENTIFIED BY &2 PROFILE mushop_services';\n\t\t\tEXECUTE IMMEDIATE 'GRANT CREATE SESSION TO &1';\n\t\t\tEXECUTE IMMEDIATE 'GRANT UNLIMITED TABLESPACE TO &1';\n\t\tELSE\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Schema User = &1 exists, steps ignored');\n\t\tEND IF;\n\tEND;\n\n\t-- Role Creation\n\tDECLARE\n\t\troleExists INTEGER;\n\t\troleName VARCHAR2 (100);\n\tBEGIN\n\t\troleName := '&1' || '_ROLE';\n\t\tSELECT COUNT(*) \n\t\tINTO roleExists \n\t\tFROM DBA_ROLES \n\t\tWHERE role = roleName;\n\t\tDBMS_OUTPUT.PUT_LINE ('** Role creationg steps - &_DATE');\n\t\tIF roleExists = 0 THEN\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Creating Role ' || roleName || '...' );\n\t\t\tEXECUTE IMMEDIATE 'CREATE ROLE ' || roleName;\n\t\t\tEXECUTE IMMEDIATE 'GRANT ' || roleName || ' TO &1';\n\t\t\tEXECUTE IMMEDIATE 'GRANT CREATE TABLE, CREATE VIEW, CREATE PROCEDURE, CREATE SEQUENCE TO ' || roleName;\n\t\tELSE\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Role '|| roleName ||' exists, steps ignored');\n\t\tEND IF;\n\tEND;\nEND;\n/\n\nquit;\n/"
---
# Source: mushop/charts/user/templates/oadb-init-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mushop-user-init
  labels: 
    app.kubernetes.io/name: user
    helm.sh/chart: user-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
data:
  atp.init.sql: "-- Copyright (c) 2019, 2021 Oracle and/or its affiliates. All rights reserved.\n-- Licensed under the Universal Permissive License v 1.0 as shown at http://oss.oracle.com/licenses/upl.\n\nSET SERVEROUTPUT ON;\nSET VERIFY OFF;\nBEGIN\n\t-- Profile Creation\n\tDECLARE\n\t\tprofileExists INTEGER;\n\tBEGIN\n\t\tSELECT COUNT(*) \n\t\tINTO profileExists \n\t\tFROM DBA_PROFILES \n\t\tWHERE PROFILE = 'MUSHOP_SERVICES';\n\t\tDBMS_OUTPUT.PUT_LINE ('** Profile creationg steps - &_DATE');\n\t\tIF profileExists = 0 THEN\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Creating Profile = MUSHOP_SERVICES ...');\n\t\t\tEXECUTE IMMEDIATE\n\t\t\t\t'CREATE PROFILE MUSHOP_SERVICES\n\t\t\t\t\tLIMIT\tPASSWORD_LIFE_TIME UNLIMITED\n\t\t\t\t\t\t\tPASSWORD_GRACE_TIME 0\n\t\t\t\t\t\t\tPASSWORD_REUSE_TIME UNLIMITED\n\t\t\t\t\t\t\tPASSWORD_REUSE_MAX UNLIMITED\n\t\t\t\t\t\t\tFAILED_LOGIN_ATTEMPTS UNLIMITED\n\t\t\t\t\t\t\tPASSWORD_LOCK_TIME UNLIMITED\n\t\t\t\t\t\t\tINACTIVE_ACCOUNT_TIME UNLIMITED';\n\t\tELSE\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Profile = MUSHOP_SERVICES exists, steps ignored');\n\t\tEND IF;\n\tEND;\n\n\t-- Schema User Creation\n\tDECLARE\n\t\tschemaUserExists INTEGER;\n\tBEGIN\n\t\tSELECT COUNT(*) \n\t\tINTO schemaUserExists \n\t\tFROM ALL_USERS \n\t\tWHERE username = '&1';\n\t\tDBMS_OUTPUT.PUT_LINE ('** Schema creationg steps - &_DATE');\n\t\tIF schemaUserExists = 0 THEN\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Creating schema = &1 ...');\n\t\t\tEXECUTE IMMEDIATE 'CREATE USER &1 IDENTIFIED BY &2 PROFILE mushop_services';\n\t\t\tEXECUTE IMMEDIATE 'GRANT CREATE SESSION TO &1';\n\t\t\tEXECUTE IMMEDIATE 'GRANT UNLIMITED TABLESPACE TO &1';\n\t\tELSE\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Schema User = &1 exists, steps ignored');\n\t\tEND IF;\n\tEND;\n\n\t-- Role Creation\n\tDECLARE\n\t\troleExists INTEGER;\n\t\troleName VARCHAR2 (100);\n\tBEGIN\n\t\troleName := '&1' || '_ROLE';\n\t\tSELECT COUNT(*) \n\t\tINTO roleExists \n\t\tFROM DBA_ROLES \n\t\tWHERE role = roleName;\n\t\tDBMS_OUTPUT.PUT_LINE ('** Role creationg steps - &_DATE');\n\t\tIF roleExists = 0 THEN\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Creating Role ' || roleName || '...' );\n\t\t\tEXECUTE IMMEDIATE 'CREATE ROLE ' || roleName;\n\t\t\tEXECUTE IMMEDIATE 'GRANT ' || roleName || ' TO &1';\n\t\t\tEXECUTE IMMEDIATE 'GRANT CREATE TABLE, CREATE VIEW, CREATE PROCEDURE, CREATE SEQUENCE TO ' || roleName;\n\t\tELSE\n\t\t\tDBMS_OUTPUT.PUT_LINE ('Role '|| roleName ||' exists, steps ignored');\n\t\tEND IF;\n\tEND;\nEND;\n/\n\nquit;\n/"
---
# Source: mushop/charts/api/templates/api-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mushop-api
  labels:
    app.kubernetes.io/name: api
    helm.sh/chart: api-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: api
    app.kubernetes.io/instance: mushop
  ports:
    - port: 80
      name: http
      targetPort: 3000
---
# Source: mushop/charts/assets/templates/assets-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mushop-assets
  labels:
    app.kubernetes.io/name: assets
    helm.sh/chart: assets-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: assets
    app.kubernetes.io/instance: mushop
  ports:
    - port: 80
      name: http
      targetPort: 3000
---
# Source: mushop/charts/carts/templates/carts-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mushop-carts
  labels:
    app.kubernetes.io/name: carts
    helm.sh/chart: carts-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: carts
    app.kubernetes.io/instance: mushop
  ports:
    - port: 80
      name: http
      targetPort: 80
---
# Source: mushop/charts/catalogue/templates/catalogue-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mushop-catalogue
  labels:
    app.kubernetes.io/name: catalogue
    helm.sh/chart: catalogue-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: catalogue
    app.kubernetes.io/instance: mushop
  ports:
    - port: 80
      name: http
      targetPort: 80
---
# Source: mushop/charts/edge/templates/edge-svc.yaml
apiVersion: v1
kind: Service
metadata:
  # intentionally w/o .Release.Name for metrics workshop
  name: edge
  labels:
    app.kubernetes.io/name: edge
    helm.sh/chart: edge-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: edge
    app.kubernetes.io/instance: mushop
  ports:
    - port: 80
      name: http
      targetPort: 8080
---
# Source: mushop/charts/events/templates/events-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mushop-events
  labels:
    app.kubernetes.io/name: events
    helm.sh/chart: events-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: events
    app.kubernetes.io/instance: mushop
  ports:
    - port: 80
      name: http
      targetPort: 8080
---
# Source: mushop/charts/fulfillment/templates/fulfillment-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: fulfillment
  labels: 
    app.kubernetes.io/name: fulfillment
    helm.sh/chart: fulfillment-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
    run: fulfillment
spec:
  selector:
    app.kubernetes.io/name: fulfillment
    app.kubernetes.io/instance: mushop
    run: fulfillment
  ports:
    - port: 80
      name: http
      protocol: TCP
      targetPort: 80
---
# Source: mushop/charts/nats/templates/nats-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mushop-nats
  annotations:
    prometheus.io/path: "/prometheus"
  labels:
    app.kubernetes.io/name: nats
    helm.sh/chart: nats-0.1.0
    app.kubernetes.io/instance: mushop
    run: nats
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: nats
    app.kubernetes.io/instance: mushop
    run: nats
  ports:
    - name: client
      port: 4222
      protocol: TCP
      targetPort: 4222
    - name: routes
      port: 6222
      protocol: TCP
      targetPort: 6222
    - name: monitoring
      port: 8222
      protocol: TCP
      targetPort: 8222
---
# Source: mushop/charts/orders/templates/orders-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mushop-orders
  labels:
    app.kubernetes.io/name: orders
    helm.sh/chart: orders-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: orders
    app.kubernetes.io/instance: mushop
  ports:
    - port: 80
      name: http
      targetPort: 80
---
# Source: mushop/charts/payment/templates/payment-svc.yaml
apiVersion: v1
kind: Service
metadata:
  # TODO: update to payment.fullname when orders can receive variable
  name: payment
  labels: 
    app.kubernetes.io/name: payment
    helm.sh/chart: payment-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: payment
    app.kubernetes.io/instance: mushop
  ports:
    - port: 80
      name: http
      targetPort: 80
---
# Source: mushop/charts/session/templates/session-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mushop-session
  labels:
    app.kubernetes.io/name: session
    helm.sh/chart: session-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: session
    app.kubernetes.io/instance: mushop
  ports:
    - port: 6379
      name: redis
---
# Source: mushop/charts/storefront/templates/storefront-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mushop-storefront
  labels:
    app.kubernetes.io/name: storefront
    helm.sh/chart: storefront-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: storefront
    app.kubernetes.io/instance: mushop
  ports:
    - port: 80
      name: http
      targetPort: 8080
---
# Source: mushop/charts/user/templates/user-svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: mushop-user
  labels: 
    app.kubernetes.io/name: user
    helm.sh/chart: user-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app.kubernetes.io/name: user
    app.kubernetes.io/instance: mushop
  ports:
    - port: 80
      name: http
      targetPort: 3000
---
# Source: mushop/templates/ingress-grafana.yaml
apiVersion: v1
kind: Service
metadata:
  name: mushop-grafana-ingress
  labels:
    name: mushop-grafana-ingress
    layer: ingress
spec:
  selector:
    name: mushop-grafana-ingress
    layer: ingress
  type: ExternalName
  externalName: mushop-utils-grafana.mushop-utilities
---
# Source: mushop/charts/api/templates/api-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mushop-api
  labels:
    app.kubernetes.io/name: api
    helm.sh/chart: api-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
      app.kubernetes.io/name: api
      app.kubernetes.io/instance: mushop
  template:
    metadata:
      labels:
        app: api
        version: "2.2.1"
        app.kubernetes.io/name: api
        app.kubernetes.io/instance: mushop
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      containers:
        - name: api
          image: "iad.ocir.io/oracle/ateam/mushop-api:2.2.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
          env:
          - name: MOCK_MODE
            value: "all"
          - name: SESSION_REDIS
            value: mushop-session
          - name: CATALOGUE_URL
            value: http://mushop-catalogue
          - name: ORDERS_URL
            value: http://mushop-orders
          - name: CARTS_URL
            value: http://mushop-carts
          - name: USERS_URL
            value: http://mushop-user
          - name: EVENTS_URL
            value: http://mushop-events
          - name: STATIC_MEDIA_URL
            value: /assets
          - name: NEWSLETTER_SUBSCRIBE_URL
            value: ""
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
---
# Source: mushop/charts/assets/templates/assets-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mushop-assets
  labels:
    app.kubernetes.io/name: assets
    helm.sh/chart: assets-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: assets
      app.kubernetes.io/name: assets
      app.kubernetes.io/instance: mushop
  template:
    metadata:
      labels:
        app: assets
        version: "1.0.1"
        app.kubernetes.io/name: assets
        app.kubernetes.io/instance: mushop
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      containers:
        - name: assets
          image: "iad.ocir.io/oracle/ateam/mushop-assets:1.0.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
---
# Source: mushop/charts/carts/templates/carts-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mushop-carts
  labels: 
    app.kubernetes.io/name: carts
    helm.sh/chart: carts-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: carts
      app.kubernetes.io/name: carts
      app.kubernetes.io/instance: mushop
  template:
    metadata:
      labels:
        app: carts
        version: "1.5.0"
        app.kubernetes.io/name: carts
        app.kubernetes.io/instance: mushop
        mockmode: "all"
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "80"
    spec:
      initContainers:
        
      containers:
        - name: carts
          image: "iad.ocir.io/oracle/ateam/mushop-carts:1.5.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
          env:
            - name: ZIPKIN
              value: zipkin.jaeger.svc.cluster.local
            - name: JAVA_OPTS
              value: -Xms64m -Xmx128m -XX:+UseG1GC -Dlogging.level.mushop.carts=TRACE  -Djava.security.egd=file:/dev/urandom -Dspring.zipkin.enabled=false
            - name: OADB_USER
              valueFrom:
                secretKeyRef:
                  name: carts-oadb-credentials
                  key: oadb_user
            - name: OADB_PW
              valueFrom:
                secretKeyRef:
                  name: carts-oadb-credentials
                  key: oadb_pw
            - name: OADB_SERVICE
              valueFrom:
                secretKeyRef:
                  name: carts-oadb-connection
                  key: oadb_service
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
            # for init container
            - name: wallet
              mountPath: /usr/lib/oracle/19.3/client64/lib/network/admin/
              readOnly: true
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
        
        # local wallet
        - name: wallet
          secret:
            secretName: carts-oadb-wallet
            defaultMode: 256
        # service init configMap
        - name: initdb
          configMap:
            name: mushop-carts-init
            items:
            - key: atp.init.sql
              path: service.sql
      nodeSelector:
          beta.kubernetes.io/os: linux
---
# Source: mushop/charts/catalogue/templates/catalogue-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mushop-catalogue
  labels: 
    app.kubernetes.io/name: catalogue
    helm.sh/chart: catalogue-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: catalogue
      app.kubernetes.io/name: catalogue
      app.kubernetes.io/instance: mushop
  template:
    metadata:
      labels:
        app: catalogue
        version: "1.2"
        app.kubernetes.io/name: catalogue
        app.kubernetes.io/instance: mushop
        mockmode: "all"
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      terminationGracePeriodSeconds: 5
      initContainers:
        
      containers:
        - name: catalogue
          image: "iad.ocir.io/oracle/ateam/mushop-catalogue:1.2"
          imagePullPolicy: IfNotPresent
          command: ["/app"]
          args:
          - -port=80
          ports:
            - name: http
              containerPort: 80
          env:
            - name: ZIPKIN
              value: 
            - name: OADB_USER
              valueFrom:
                secretKeyRef:
                  name: catalogue-oadb-credentials
                  key: oadb_user
            - name: OADB_PW
              valueFrom:
                secretKeyRef:
                  name: catalogue-oadb-credentials
                  key: oadb_pw
            - name: OADB_SERVICE
              valueFrom:
                secretKeyRef:
                  name: catalogue-oadb-connection
                  key: oadb_service
          volumeMounts:
            - name: wallet
              mountPath: /usr/lib/oracle/19.3/client64/lib/network/admin/
              readOnly: true
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 120
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
      volumes:
        
        # local wallet
        - name: wallet
          secret:
            secretName: catalogue-oadb-wallet
            defaultMode: 256
        # service init configMap
        - name: initdb
          configMap:
            name: mushop-catalogue-init
            items:
            - key: atp.init.sql
              path: service.sql
---
# Source: mushop/charts/edge/templates/edge-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mushop-edge
  labels:
    app.kubernetes.io/name: edge
    helm.sh/chart: edge-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: edge
      app.kubernetes.io/name: edge
      app.kubernetes.io/instance: mushop
  template:
    metadata:
      labels:
        app: edge
        version: "1.1.0"
        app.kubernetes.io/name: edge
        app.kubernetes.io/instance: mushop
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      containers:
        - name: edge
          image: "iad.ocir.io/oracle/ateam/mushop-edge-router:1.1.0"
          imagePullPolicy: IfNotPresent
          args:
          - --configfile=/config/traefik.toml
          ports:
            - name: http
              containerPort: 8080
          volumeMounts:
            - mountPath: /config
              name: config
          livenessProbe:
            httpGet:
              path: /ping
              port: http
          readinessProbe:
            httpGet:
              path: /ping
              port: http
          resources:
            limits:
              cpu: 100m
              memory: 256Mi
            requests:
              cpu: 50m
              memory: 128Mi
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
      volumes:
        - name: config
          configMap:
            name: mushop-edge
---
# Source: mushop/charts/events/templates/events-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mushop-events
  labels:
    app.kubernetes.io/name: events
    helm.sh/chart: events-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: events
      app.kubernetes.io/name: events
      app.kubernetes.io/instance: mushop
  template:
    metadata:
      labels:
        app: events
        version: "0.0.2"
        app.kubernetes.io/name: events
        app.kubernetes.io/instance: mushop
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      containers:
        - name: events
          image: "iad.ocir.io/oracle/ateam/mushop-events:0.0.2"
          imagePullPolicy: IfNotPresent
          command: ["/app"]
          args:
          - -port=8080
          env:
            
          ports:
            - name: http
              containerPort: 8080
          livenessProbe:
            periodSeconds: 120
            httpGet:
              path: /health
              port: http
          readinessProbe:
            periodSeconds: 10
            httpGet:
              path: /health
              port: http
          resources:
            limits:
              cpu: 200m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
---
# Source: mushop/charts/fulfillment/templates/fulfillment-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mushop-fulfillment
  labels:
    app.kubernetes.io/name: fulfillment
    helm.sh/chart: fulfillment-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
    run: fulfillment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fulfillment
      app.kubernetes.io/name: fulfillment
      app.kubernetes.io/instance: mushop
      run: fulfillment
  template:
    metadata:
      labels:
        app: fulfillment
        version: "1.1.0"
        app.kubernetes.io/name: fulfillment
        app.kubernetes.io/instance: mushop
        run: fulfillment
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
        prometheus.io/scrape: "true"
        prometheus.io/path: /prometheus
        prometheus.io/port: "80"
    spec:
      containers:
        - name: fulfillment
          image: "iad.ocir.io/oracle/ateam/mushop-fulfillment:1.1.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
          env:
            - name: NATS_HOST
              value: "mushop-nats"
            - name: NATS_PORT
              value: "4222"
            - name: ORDERS_NEW
              value: "mushop-orders"
            - name: ORDERS_SHIPPED
              value: "mushop-shipments"
            - name: SIMULATION_DELAY
              value: "10000"
---
# Source: mushop/charts/nats/templates/nats-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mushop-nats
  labels:
    app.kubernetes.io/name: nats
    helm.sh/chart: nats-0.1.0
    app.kubernetes.io/instance: mushop
    run: nats
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nats
      app.kubernetes.io/name: nats
      app.kubernetes.io/instance: mushop
      run: nats
  template:
    metadata:
      labels:
        app: nats
        version: "2.1.2"
        app.kubernetes.io/name: nats
        app.kubernetes.io/instance: mushop
        run: nats
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
        prometheus.io/scrape: "true"
        prometheus.io/path: /metrics
        prometheus.io/port: "7777"
    spec:
      containers:
        - name: nats
          image: "nats:2.1.2"
          imagePullPolicy: IfNotPresent
          ports:
            - name: client
              containerPort: 4222
              protocol: TCP
            - name: routes
              containerPort: 6222
              protocol: TCP
            - name: monitoring
              containerPort: 8222
              protocol: TCP
        - name: nats-exporter
          image: "synadia/prometheus-nats-exporter:0.6.2"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 7777
          args:
            - -D 
            - -varz 
            - -channelz
            - -connz
            - -serverz
            - -subz
            - -gatewayz
            - "http://localhost:8222"
---
# Source: mushop/charts/orders/templates/orders-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mushop-orders
  labels: 
    app.kubernetes.io/name: orders
    helm.sh/chart: orders-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orders
      app.kubernetes.io/name: orders
      app.kubernetes.io/instance: mushop
  template:
    metadata:
      labels:
        app: orders
        version: "2.2.2"
        app.kubernetes.io/name: orders
        app.kubernetes.io/instance: mushop
        mockmode: "all"
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
        prometheus.io/scrape: "true"
        prometheus.io/path: /actuator/prometheus
        prometheus.io/port: "80"
    spec:
      initContainers:
        
      containers:
        - name: orders
          image: "iad.ocir.io/oracle/ateam/mushop-orders:2.2.2"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
          livenessProbe:
            initialDelaySeconds: 30
            periodSeconds: 15
            failureThreshold: 5
            httpGet:
              path: /actuator/health/liveness
              port: http
          readinessProbe:
            initialDelaySeconds: 30
            periodSeconds: 5
            httpGet:
              path: /actuator/health/readiness
              port: http

          env:
            - name: ZIPKIN
              value: zipkin.jaeger.svc.cluster.local
            - name: JAVA_OPTS
              value: -Xms32m -Xmx150m -XX:MaxRAM=150m -Djava.security.egd=file:/dev/urandom -Doracle.jdbc.fanEnabled=false -XX:+UnlockExperimentalVMOptions -XX:+UseZGC -Dlogging.level.mushop.orders=INFO -Dspring.zipkin.enabled=false
            - name: NATS_HOST
              value: "mushop-nats"
            - name: NATS_PORT
              value: "4222"
            - name: ORDERS_NEW
              value: "mushop-orders"
            - name: ORDERS_SHIPPED
              value: "mushop-shipments"
            - name: OADB_USER
              valueFrom:
                secretKeyRef:
                  name: orders-oadb-credentials
                  key: oadb_user
            - name: OADB_PW
              valueFrom:
                secretKeyRef:
                  name: orders-oadb-credentials
                  key: oadb_pw
            - name: OADB_SERVICE
              valueFrom:
                secretKeyRef:
                  name: orders-oadb-connection
                  key: oadb_service
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
            # for init container
            - name: wallet
              mountPath: /wallet/
              readOnly: true
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
        
        # local wallet
        - name: wallet
          secret:
            secretName: orders-oadb-wallet
            defaultMode: 256
        # service init configMap
        - name: initdb
          configMap:
            name: mushop-orders-init
            items:
            - key: atp.init.sql
              path: service.sql
      nodeSelector:
          beta.kubernetes.io/os: linux
---
# Source: mushop/charts/payment/templates/payment-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mushop-payment
  labels:
    app.kubernetes.io/name: payment
    helm.sh/chart: payment-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payment
      app.kubernetes.io/name: payment
      app.kubernetes.io/instance: mushop
  template:
    metadata:
      labels:
        app: payment
        version: "0.0.1"
        app.kubernetes.io/name: payment
        app.kubernetes.io/instance: mushop
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      containers:
        - name: payment
          image: "iad.ocir.io/oracle/ateam/mushop-payment:0.0.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
          livenessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 120
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 99m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
      nodeSelector:
          beta.kubernetes.io/os: linux
---
# Source: mushop/charts/session/templates/session-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mushop-session
  labels:
    app.kubernetes.io/name: session
    helm.sh/chart: session-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: session
      app.kubernetes.io/name: session
      app.kubernetes.io/instance: mushop
  template:
    metadata:
      labels:
        app: session
        version: "alpine"
        app.kubernetes.io/name: session
        app.kubernetes.io/instance: mushop
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      containers:
        - name: session
          image: "redis:alpine"
          imagePullPolicy: IfNotPresent
          ports:
            - name: redis
              containerPort: 6379
          securityContext:
            capabilities:
              add:
              - CHOWN
              - SETGID
              - SETUID
              drop:
              - all
            readOnlyRootFilesystem: true
      nodeSelector:
        beta.kubernetes.io/os: linux
---
# Source: mushop/charts/storefront/templates/storefront-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mushop-storefront
  labels:
    app.kubernetes.io/name: storefront
    helm.sh/chart: storefront-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: storefront
      app.kubernetes.io/name: storefront
      app.kubernetes.io/instance: mushop
  template:
    metadata:
      labels:
        app: storefront
        version: "2.1.2"
        app.kubernetes.io/name: storefront
        app.kubernetes.io/instance: mushop
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      containers:
        - name: storefront
          image: "iad.ocir.io/oracle/ateam/mushop-storefront:2.1.2"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
            - name: status
              containerPort: 8888
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              - CHOWN
              - SETGID
              - SETUID
              drop:
              - all
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 10001
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
---
# Source: mushop/charts/user/templates/user-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mushop-user
  labels: 
    app.kubernetes.io/name: user
    helm.sh/chart: user-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user
      app.kubernetes.io/name: user
      app.kubernetes.io/instance: mushop
  template:
    metadata:
      labels:
        app: user
        version: "1.1.0"
        app.kubernetes.io/name: user
        app.kubernetes.io/instance: mushop
        mockmode: "all"
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      initContainers:
        
      containers:
        - name: user
          image: "iad.ocir.io/oracle/ateam/mushop-user:1.1.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
          env:
            - name: OADB_USER
              valueFrom:
                secretKeyRef:
                  name: user-oadb-credentials
                  key: oadb_user
            - name: OADB_PW
              valueFrom:
                secretKeyRef:
                  name: user-oadb-credentials
                  key: oadb_pw
            - name: OADB_SERVICE
              valueFrom:
                secretKeyRef:
                  name: user-oadb-connection
                  key: oadb_service
          volumeMounts:
            - name: wallet
              mountPath: /usr/lib/oracle/19.3/client64/lib/network/admin/
              readOnly: true
          resources:
            limits:
              cpu: 300m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - all
            readOnlyRootFilesystem: true
          livenessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 120
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
      volumes:
        
        # local wallet
        - name: wallet
          secret:
            secretName: user-oadb-wallet
            defaultMode: 256
        # service init configMap
        - name: initdb
          configMap:
            name: mushop-user-init
            items:
            - key: atp.init.sql
              path: service.sql
      nodeSelector:
        beta.kubernetes.io/os: linux
---
# Source: mushop/charts/api/templates/api-hpa.yaml
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: mushop-api
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mushop-api
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 70
          type: Utilization
      type: Resource
---
# Source: mushop/charts/assets/templates/assets-hpa.yaml
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: mushop-assets
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mushop-assets
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 70
          type: Utilization
      type: Resource
---
# Source: mushop/charts/catalogue/templates/catalogue-hpa.yaml
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: mushop-catalogue
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mushop-catalogue
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 70
        type: Utilization
    type: Resource
---
# Source: mushop/charts/edge/templates/edge-hpa.yaml
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: mushop-edge
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mushop-edge
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 70
        type: Utilization
    type: Resource
---
# Source: mushop/charts/events/templates/events-hpa.yaml
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: mushop-events
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mushop-events
  minReplicas: 1
  maxReplicas: 10
  metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 70
          type: Utilization
      type: Resource
---
# Source: mushop/charts/storefront/templates/storefront-hpa.yaml
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: mushop-storefront
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mushop-storefront
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 70
        type: Utilization
    type: Resource
---
# Source: mushop/charts/user/templates/user-hpa.yaml
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: mushop-user
  labels: 
    app.kubernetes.io/name: user
    helm.sh/chart: user-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mushop-user
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 70
        type: Utilization
    type: Resource
---
# Source: mushop/charts/assets/templates/deploy-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: mushop-assets-deploy-1
  labels: 
    app.kubernetes.io/name: assets
    helm.sh/chart: assets-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
spec:
  ttlSecondsAfterFinished: 120
  backoffLimit: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app.kubernetes.io/name: assets
        app.kubernetes.io/instance: mushop
    spec:
      restartPolicy: Never
      containers:
        - name: init
          image: "iad.ocir.io/oracle/ateam/mushop-assets:1.0.1"
          imagePullPolicy: IfNotPresent
          command: ["node", "deploy.js"]
          env:
            
            - name: BUCKET_PAR
              valueFrom:
                secretKeyRef:
                  name: mushop-bucket
                  key: parUrl
                  optional: true
---
# Source: mushop/templates/ingress-edge.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mushop
  labels:
    app.kubernetes.io/name: mushop
    helm.sh/chart: mushop-0.1.1
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    
spec:
  rules:
    - http:
        paths:
        - path: /
          backend:
            # intentionally w/o .Release.Name for metrics workshop
            serviceName: edge
            servicePort: 80
---
# Source: mushop/templates/ingress-grafana.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: mushop-grafana
  labels:
    app.kubernetes.io/name: mushop
    helm.sh/chart: mushop-0.1.1
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    
spec:
  rules:
    - http:
        paths:
        - path: /grafana(/|$)(.*)
          backend:
            # intentionally w/o .Release.Name for metrics workshop
            serviceName: mushop-grafana-ingress
            servicePort: 80
---
# Source: mushop/templates/cluster-issuers.yaml
# Copyright (c) 2019, 2020 Oracle and/or its affiliates. All rights reserved.
# Licensed under the Universal Permissive License v 1.0 as shown at http://oss.oracle.com/licenses/upl.
#
---
# Source: mushop/charts/api/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "mushop-api-test-connection"
  labels:
    app.kubernetes.io/name: api
    helm.sh/chart: api-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['mushop-api:80']
  restartPolicy: Never
---
# Source: mushop/charts/assets/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "mushop-assets-test-connection"
  labels:
    app.kubernetes.io/name: assets
    helm.sh/chart: assets-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['mushop-assets:80']
  restartPolicy: Never
---
# Source: mushop/charts/carts/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "mushop-carts-test-connection"
  labels:
    app.kubernetes.io/name: carts
    helm.sh/chart: carts-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['mushop-carts:80']
  restartPolicy: Never
---
# Source: mushop/charts/catalogue/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "mushop-catalogue-test-connection"
  labels:
    app.kubernetes.io/name: catalogue
    helm.sh/chart: catalogue-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['mushop-catalogue:80']
  restartPolicy: Never
---
# Source: mushop/charts/edge/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "mushop-edge-test-connection"
  labels:
    app.kubernetes.io/name: edge
    helm.sh/chart: edge-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['mushop-edge:80']
  restartPolicy: Never
---
# Source: mushop/charts/events/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "mushop-events-test-connection"
  labels:
    app.kubernetes.io/name: events
    helm.sh/chart: events-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['mushop-events:80']
  restartPolicy: Never
---
# Source: mushop/charts/fulfillment/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "mushop-fulfillment-test-connection"
  labels:
    app.kubernetes.io/name: fulfillment
    helm.sh/chart: fulfillment-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
    run: fulfillment
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['mushop-fulfillment:80']
  restartPolicy: Never
---
# Source: mushop/charts/orders/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "mushop-orders-test-connection"
  labels:
    app.kubernetes.io/name: orders
    helm.sh/chart: orders-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['mushop-orders:80']
  restartPolicy: Never
---
# Source: mushop/charts/payment/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "mushop-payment-test-connection"
  labels:
    app.kubernetes.io/name: payment
    helm.sh/chart: payment-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['mushop-payment:80']
  restartPolicy: Never
---
# Source: mushop/charts/session/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "mushop-session-test-connection"
  labels:
    app.kubernetes.io/name: session
    helm.sh/chart: session-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['mushop-session:6379']
  restartPolicy: Never
---
# Source: mushop/charts/storefront/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "mushop-storefront-test-connection"
  labels:
    app.kubernetes.io/name: storefront
    helm.sh/chart: storefront-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['mushop-storefront:80']
  restartPolicy: Never
---
# Source: mushop/charts/user/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "mushop-user-test-connection"
  labels:
    app.kubernetes.io/name: user
    helm.sh/chart: user-0.1.0
    app.kubernetes.io/instance: mushop
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test-success
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args:  ['mushop-user:80']
  restartPolicy: Never
