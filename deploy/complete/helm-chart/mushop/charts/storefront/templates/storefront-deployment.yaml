apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "storefront.fullname" . }}
  labels:
{{ include "storefront.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
      app.kubernetes.io/name: {{ include "storefront.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
        version: {{ .Values.image.tag | quote }}
        app.kubernetes.io/name: {{ include "storefront.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http-alt
              containerPort: 8080
            - name: status
              containerPort: 8888
          env:
          - name: ODA_ENABLED
            value: "{{ .Values.env.odaEnabled }}"
          - name: ODA_URI
            value: "{{ .Values.env.odaUri }}"
          - name: ODA_CHANNEL_ID
            value: "{{ .Values.env.odaChannelId }}"
          - name: ODA_SECRET
            value: "{{ .Values.env.odaSecret }}"
          - name: ODA_USER_INIT_MESSAGE
            value: "{{ .Values.env.odaUserHiddenInitMessage }}"
          livenessProbe:
            httpGet:
              path: /
              port: http-alt
          readinessProbe:
            httpGet:
              path: /
              port: http-alt
          volumeMounts:
          - mountPath: /tmp
            name: tmp-volume
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory